<?xml version="1.0"?>

<!-- This is the ant build file for the rpiutil suite.

     The target of interest is build which should leave a jar file
     in the dist directory..

     Authors: Mike Douglass   douglm rpi.edu
-->

<project name="rpiutil" default="build">
  <property environment="env"/>
  <dirname property="project.home" file="${ant.file}"/>

  <property file="${project.home}/build.properties" />
  
  <property name="bedework.home"
            location="${project.home}/../.." />

  <property name="build.dir" location="${bedework.home}/build"/>

  <import file="${build.dir}/buildTools/deftasks.xml"/>

  <deftasks/>

  <projectDefs name="${org.bedework.package.name}"
               version="${org.bedework.rpiutil.version}" 
               subproject="true" />

  <target name="init">
    <projectInit/>

    <getJar name="commons-codec" version="1.3" />
    <getJar name="commons-httpclient" version="3.0" />
    <getJar name="derby" version="10.5.3.0" />
    <getJar name="derbynet" version="10.5.3.0" />
    <getJar name="fop" />
    <getJar name="hibernate" version="3.3.1.ga" />
    <getJar name="h2" version="1.2.130" />
    <getJar name="ical4j" version="head-20100601" />
    <getJar name="jtidy" />
    <getJar name="junit" version="4.4" />
    <getJar name="log4j" version="1.2.8" />
    <getJar name="lucene-core" version="2.0.0" />
    <getJar name="lucene-misc" version="2.0.0" />
    <getJar name="servletapi" version="2.4" />
    <getJar name="struts" version="1.2.9" />

    <property name="org.bedework.rpiutil.base" location="${project.home}" />
    <property name="org.bedework.rpiutiltests.base" location="${project.home}/tests" />

    <property name="generated.jar.file"
              location="${dist.home}/${edu.rpi.cmt.rpiutil.jar}-${project.version}.jar" />

    <property name="test.jar.file"
              location="${dist.home}/${edu.rpi.cmt.rpiutil.jar}-test-${project.version}.jar" />
  </target>

  <target name="build-source">
    <build-jar module-base="${org.bedework.rpiutil.base}" 
               jar-file="${generated.jar.file}" />
  </target>

  <target name="build-test">
    <build-jar module-base="${org.bedework.rpiutiltests.base}" 
               jar-file="${test.jar.file}" />
  </target>

  <!-- =================================================================
                            javadoc.
       ================================================================= -->
  <target name="javadoc" depends="init"
          description="Create Javadoc API documentation">
    <property name="destdir" location="${dist.home}/docs/api"/>
    <mkdir dir="${destdir}"/>

    <javadoc sourcepath="${source.home}"
           classpathref="compile.classpath"
                destdir="${destdir}"
           packagenames="edu.rpi.*"
                 access="public"
                 author="true"
                version="true"
          breakiterator="yes"
            windowtitle="${project.name} ${project.version} API Documentation">
      <doctitle><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></doctitle>
      <header><![CDATA[${project.name} ${project.version}<br/>API Documentation]]></header>
      <link href="${env.JAVA_HOME}/docs/api" />
    </javadoc>
  </target>

  <!-- =================================================================
                            unittest.
       ================================================================= -->
  <target name="unittest" depends="init,build-source,build-test,run-unittest,cleanup"
          description="Test the access control classes"/>

  <target name="run-unittest" >
    <!-- ................................................................
                            unpack the tests jar
         ............................................................... -->
    <delete dir="${dist.home}/tests" />
    <mkdir dir="${dist.home}/tests" />
    <unjar src="${test.jar.file}" dest="${dist.home}/tests"/>

    <path id="test.class.path">
      <fileset dir="${dist.home}">
        <include name="*.jar"/>
      </fileset>

      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
      </fileset>
    </path>

    <pathconvert property="test.classpath.string"
                 pathSep=":">
      <path refid="test.class.path" />
    </pathconvert>

    <echo message="CP=${test.classpath.string}" />
    <junit printsummary="no"
           errorProperty="test.failed"
           failureProperty="test.failed"
           fork="true">
      <classpath>
        <path refid="test.class.path"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
<!--      <formatter type="xml"/> -->
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset dir="${dist.home}/tests" includes="**/*Test.class"/>
      </batchtest>
    </junit>

    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>

    <fail message="Tests failed. Check log and/or reports." if="test.failed"/>
  </target>
</project>
