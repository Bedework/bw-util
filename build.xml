<?xml version="1.0"?>

<!-- This is the ant build file for the rpiutil suite.

     The target of interest is build which should leave a jar file
     in the dist directory..

     Authors: Mike Douglass   douglm rpi.edu
-->

<project name="rpiutil" default="deploy"
         xmlns:artifact="antlib:org.apache.maven.artifact.ant">
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" />

  <property environment="env"/>
  <dirname property="project.home" file="${ant.file}"/>

  <property name="bedework.home"
            location="${project.home}/../bedework" />

  <property name="build.dir" location="${bedework.home}/build"/>

  <import file="${build.dir}/buildTools/deftasks.xml"/>

  <deftasks/>

  <projectDefs name="RPI utility package"
               version="${org.bedework.rpiutil.version}" 
               subproject="true" />

  <target name="init">
    <projectInit/>

    <property name="org.bedework.rpiutil.base" location="${project.home}" />
    <property name="org.bedework.rpiutiltests.base" location="${project.home}/tests" />

    <property name="generated.jar.file"
              location="${dist.home}/rpiutil-${project.version}.jar" />

    <property name="test.jar.file"
              location="${dist.home}/rpiutil-test-${project.version}.jar" />
  </target>
  
  <target name="build-init" depends="init">
    <!--    <getJar name="commons-codec" version="1.5" />
    <getJar name="derby" version="10.5.3.0" />
    <getJar name="derbynet" version="10.5.3.0" /> 
    <getJar name="fop" />
    <getJar name="hibernate" version="3.6.9.Final" />
  	<getJar name="httpclient" version="4.1.2" />
  	<getJar name="httpcore" version="4.1.2" />
    <getJar name="h2" version="1.2.130" />
    <getJar name="ical4j" version="head-20100601" />
    <getJar name="jtidy" />
    <getJar name="junit" version="4.4" />
    <getJar name="log4j" version="1.2.8" />
    <getJar name="lucene-core" version="2.0.0" />
    <getJar name="lucene-misc" version="2.0.0" /> 
    <getJar name="servlet-api" version="2.4" />
    <getJar name="struts" version="1.2.9" />
    
    <getJar name="jboss-j2se" version="5.1.0.GA" />
-->    
    <!--
    <dependencies>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.5</version>
      </dependency>
      
      <dependency>
        <groupId>org.apache.derby</groupId>
        <artifactId>derby</artifactId>
        <version>10.5.3.0</version>
      </dependency>
      
      <dependency>
        <groupId>org.apache.derby</groupId>
        <artifactId>derbynet</artifactId>
        <version>10.5.3.0</version>
      </dependency>
      
      <dependency>
        <groupId>org.apache.xmlgraphics</groupId>
        <artifactId>fop</artifactId>
      </dependency>
      
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate</artifactId>
        <version>3.6.9.Final</version>
      </dependency>
      
      <dependency>
        <groupId>httpclient</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.1.2</version>
      </dependency>
      
      <dependency>
        <groupId>httpcore</groupId>
        <artifactId>httpcore</artifactId>
        <version>4.1.2</version>
      </dependency>
      
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>1.2.130</version>
      </dependency>
      
      <dependency>
        <groupId>org.mnode.ical4j</groupId>
        <artifactId>ical4j</artifactId>
        <version>head-20100601</version>
      </dependency>
      
      <dependency>
        <groupId>org.w3c.tidy</groupId>
        <artifactId>jtidy</artifactId>
      </dependency>
      
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.4</version>
      </dependency>
      
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.8</version>
      </dependency>
      
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-core</artifactId>
        <version>2.0.0</version>
      </dependency>
      
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-misc</artifactId>
        <version>2.0.0</version>
      </dependency>
      
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.4</version>
      </dependency>
      
      <dependency>
        <groupId>struts</groupId>
        <artifactId>struts</artifactId>
        <version>1.2.9</version>
      </dependency>
      
      <dependency>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-j2se</artifactId>
        <version>5.1.0.GA</version>
      </dependency>
      
      <dependency>
        <groupId>org.bedework.bwxml</groupId>
        <artifactId>bw-icalschema</artifactId>
        <version>${org.bedework.bwxml.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.bedework.bwxml</groupId>
        <artifactId>bw-tzschema</artifactId>
        <version>${org.bedework.bwxml.version}</version>
      </dependency>
          
      <dependency>
        <groupId>org.bedework.bwxml</groupId>
        <artifactId>bw-calws-soapschema</artifactId>
        <version>${org.bedework.bwxml.version}</version>
      </dependency>
    </dependencies>
    
    <echo message="*************dependencies: ${org.bedework.project.dependencies}" />
    <getJar name="bw-icalschema" 
            version="${org.bedework.bwxml.version}" project="bwxml" />

    <getJar name="bw-tzschema" 
            version="${org.bedework.bwxml.version}" project="bwxml" />

    <getJar name="bw-calws-soapschema" 
            version="${org.bedework.bwxml.version}" project="bwxml" />-->
    
    <!--
    <artifact:pom id="the-pom" file="pom.xml" />

    < ! - -
                               useScope="runtime" 
    - - >
    <artifact:dependencies filesetId="dependency.fileset" 
                           useScope="compile" 
                           pomRefId="the-pom">
    </artifact:dependencies>
    
    <copy todir="${lib.dir}">
      <fileset refid="dependency.fileset" />
      <mapper type="flatten" />
    </copy>
    -->
    <resolveDependencies pomFile="pom.xml" />
  </target>

  <target name="build-source" depends="build-init">
    <build-jar module-base="${org.bedework.rpiutil.base}" 
               jar-file="${generated.jar.file}" 
               bundle-xml="${project.home}/bundle.xml"
               jar-name="rpiutil"
               jar-version="${org.bedework.rpiutil.version}"
     />
    
    <installJar dir="${org.bedework.rpiutil.base}" name="${generated.jar.file}"/>
  </target>

  <target name="build-test" depends="build-init">
    <build-jar module-base="${org.bedework.rpiutiltests.base}" 
               jar-file="${test.jar.file}" />
  </target>
  
  <target name="deploy" depends="deploy-init,build" >
    <deployJar dir="${org.bedework.rpiutil.base}" name="${generated.jar.file}"/>
    <!--<deployBundle bundle="${generated.jar.file}" />-->
  </target>

  <!-- =================================================================
                            unittest.
       ================================================================= -->
  <target name="unittest" depends="init,build-source,build-test,run-unittest,cleanup"
          description="Test the access control classes"/>

  <target name="run-unittest" >
    <!-- ................................................................
                            unpack the tests jar
         ............................................................... -->
    <delete dir="${dist.home}/tests" />
    <mkdir dir="${dist.home}/tests" />
    <unjar src="${test.jar.file}" dest="${dist.home}/tests"/>

    <path id="test.class.path">
      <fileset dir="${dist.home}">
        <include name="*.jar"/>
      </fileset>

      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
      </fileset>
    </path>

    <pathconvert property="test.classpath.string"
                 pathSep=":">
      <path refid="test.class.path" />
    </pathconvert>

    <echo message="CP=${test.classpath.string}" />
    <junit printsummary="no"
           errorProperty="test.failed"
           failureProperty="test.failed"
           fork="true">
      <classpath>
        <path refid="test.class.path"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
<!--      <formatter type="xml"/> -->
      <test name="${testcase}" todir="${test.data.dir}" if="testcase"/>
      <batchtest todir="${test.data.dir}" unless="testcase">
        <fileset dir="${dist.home}/tests" includes="**/*Test.class"/>
      </batchtest>
    </junit>

    <junitreport todir="${test.data.dir}">
      <fileset dir="${test.data.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.reports.dir}"/>
    </junitreport>

    <fail message="Tests failed. Check log and/or reports." if="test.failed"/>
  </target>
</project>
